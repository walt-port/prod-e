name: Deploy Production Experience
# Automated deployment workflow for the Production Experience project
# For complete documentation, see .github/CICD.md

on:
  push:
    branches: ['main']
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.5.0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Debug - Check environment
        run: |
          echo "Node version:"
          node -v
          echo "NPM version:"
          npm -v
          echo "Working directory:"
          pwd
          echo "Directory contents:"
          ls -la
          echo "Content of cdktf.json:"
          cat cdktf.json
          echo "File encoding check:"
          file cdktf.json
          echo "Check for BOM in cdktf.json:"
          hexdump -C cdktf.json | head -1

      - name: Install cdktf-cli
        run: |
          npm install -g cdktf-cli@0.15.5
          echo "CDKTF version:"
          cdktf --version

      - name: Install packages
        run: npm ci --legacy-peer-deps

      - name: Clean cdktf.out and .gen directories
        run: |
          rm -rf cdktf.out
          rm -rf .gen

      - name: Run tests
        run: npm test

      - name: Get dependencies with debug
        run: |
          echo "Running cdktf get with debug output..."
          CDKTF_LOG_LEVEL=debug cdktf get --skip-provider-schema-validation

      - name: Synthesize
        run: npm run synth

      - name: Create Lambda zip file
        run: |
          mkdir -p node_modules/backup
          cp infrastructure/lambda/backup.js node_modules/backup/
          cd node_modules/backup
          zip -r backup.zip .
          cp backup.zip ../../
          cd ../../
          mv backup.zip dummy-backup.zip
          cp dummy-backup.zip cdktf.out/stacks/prod-e/

      - name: Copy and execute import script
        run: |
          chmod +x import-commands.sh
          cp import-commands.sh cdktf.out/stacks/prod-e/
          cd cdktf.out/stacks/prod-e/
          ../../import-commands.sh > import-commands.log 2>&1 || echo "Import commands completed with some errors"
          cd ../../..

      - name: Deploy
        run: cdktf deploy --auto-approve

  resource-check:
    needs: deploy
    uses: ./.github/workflows/resource-check.yml
    secrets: inherit
