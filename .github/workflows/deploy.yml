name: Deploy Prod-E
# For detailed documentation on this workflow, see:
# 1. .github/CICD.md - Quick reference
# 2. docs/ci-cd.md - Complete documentation
on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: '1.7.4'

      - name: Install CDKTF
        run: npm install -g cdktf-cli

      - name: Install Dependencies
        run: npm install

      - name: Generate CDKTF Providers
        run: cdktf get

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Build and Push Backend
        run: |
          cd backend
          docker build -t prod-e-backend .
          docker tag prod-e-backend:latest 043309339649.dkr.ecr.us-west-2.amazonaws.com/prod-e-backend:latest
          aws ecr get-login-password --region us-west-2 | docker login --username AWS --password-stdin 043309339649.dkr.ecr.us-west-2.amazonaws.com
          docker push 043309339649.dkr.ecr.us-west-2.amazonaws.com/prod-e-backend:latest

      - name: Build and Push Prometheus
        run: |
          cd backend
          docker build -f Dockerfile.prometheus -t prod-e-prometheus .
          docker tag prod-e-prometheus:latest 043309339649.dkr.ecr.us-west-2.amazonaws.com/prod-e-prometheus:latest
          aws ecr get-login-password --region us-west-2 | docker login --username AWS --password-stdin 043309339649.dkr.ecr.us-west-2.amazonaws.com
          docker push 043309339649.dkr.ecr.us-west-2.amazonaws.com/prod-e-prometheus:latest

      - name: Build and Push Grafana
        run: |
          cd backend
          docker build -f Dockerfile.grafana -t prod-e-grafana .
          docker tag prod-e-grafana:latest 043309339649.dkr.ecr.us-west-2.amazonaws.com/prod-e-grafana:latest
          aws ecr get-login-password --region us-west-2 | docker login --username AWS --password-stdin 043309339649.dkr.ecr.us-west-2.amazonaws.com
          docker push 043309339649.dkr.ecr.us-west-2.amazonaws.com/prod-e-grafana:latest

      - name: Run Backend Tests
        run: |
          cd backend
          npm install
          npm test

      - name: Prepare Lambda Function
        run: |
          # Create zip file for Lambda function
          cd infrastructure/lambda
          zip -j backup.zip backup.js
          # Copy to the location needed by the import script
          cp backup.zip ../../dummy-backup.zip

      - name: Prepare Import Script for CI
        run: |
          chmod +x infrastructure/scripts/import-resources.sh

      - name: Import Existing Resources
        run: |
          # Run the import script in CI mode (non-interactive)
          ./infrastructure/scripts/import-resources.sh --ci

      - name: Deploy Infrastructure
        run: |
          # Set the environment variable to handle existing resources
          export SKIP_EXISTING_RESOURCES=true
          cdktf synth && cdktf deploy --auto-approve
